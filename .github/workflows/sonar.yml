name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-code:
    name: Snyk Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: >
            --severity-threshold=high
            --all-projects
            --sarif-file-output=snyk-code.sarif
      - name: Upload SARIF file
        #if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-code.sarif  

  snyk-container:
    name: Snyk Container
    runs-on: ubuntu-latest
    needs: snyk-code
    steps:
      ## Checkout is required since Snyk needs the Dockerfile for the Sarif report
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Docker Build
        run: |
          docker build -t image-snyk:${{ github.sha }} . 
      - name: Snyk
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: image-snyk:${{ github.sha }}
          args: >
            -d
            --file=Dockerfile
            --severity-threshold=high
      - name: Upload SARIF file
        #if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  deploy-heroku:
    name: Deploy Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "nnieto-vulne2022" #Must be unique in Heroku
          heroku_email: "nico.n@live.com.ar"
          remote_branch: "master"
          usedocker: true

  build:
    # The type of runner that the job will run on
    name: Owasp ZAP
    needs: deploy-heroku
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: OWASP ZAP Baseline Scan
        # You may pin to the exact commit or the version.
        # uses: zaproxy/action-baseline@7cea08522cd386f6c675776d5e4296aecf61f33b
        uses: zaproxy/action-baseline@v0.7.0
        with:
          # Target URL
          target: "https://nnieto-vulne2022.herokuapp.com/"